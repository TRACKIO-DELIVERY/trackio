name: Deploy to Production

on:
  repository_dispatch:
      types: [order-service-updated, tracking-service-updated ,message-broker-updated, infra-updated]

  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name : Checkout repository
        uses: actions/checkout@v2
  
      - name: Git Submodule Update
        run: |
          git submodule update --remote --recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Copy .env template for build
        run: cp .env.template .env
      
      - name: Build modules
        uses: docker/bake-action@v6
        with:
          push: false
          load: true
          files: docker-compose.yml
          
      - name: Configurar Git
        run: |
          git config --global user.name "Bot action"
          git config --global user.email "mirlaisabel11@gmail.com"
          
      - name: Commit e Push (if needed)
        run: |
          if ! git diff --quiet --exit-code; then
            git add .
            git commit -m "Deploy(${{ github.sha }}): Update submodules"
            git push origin main
          else
            echo "No submodule updates to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create PEM file
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private-key.pem
          chmod 600 private-key.pem

      - name: SSH into EC2 and main repo and submodules
        run: |
          ssh -i private-key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd ~/trackio_deploy

            echo "${{ secrets.ENV_FILE }}" > .env
            echo "Arquivo .env criado com sucesso"

            git pull origin main
            git submodule update --init --recursive --force
            echo "Código e submódulos atualizados com sucesso!"
            docker-compose -f docker-compose.yml down && docker-compose -f docker-compose.yml up -d --build
          EOF